import requests
from bs4 import BeautifulSoup
import sys
from datetime import datetime

def get_pnj_gold_prices_selenium():
    """
    L·∫•y d·ªØ li·ªáu gi√° v√†ng t·ª´ PNJ s·ª≠ d·ª•ng Selenium ƒë·ªÉ x·ª≠ l√Ω JavaScript
    """
    try:
        from selenium import webdriver
        from selenium.webdriver.chrome.options import Options
        from selenium.webdriver.common.by import By
        import time
        
        # C·∫•u h√¨nh Chrome options
        chrome_options = Options()
        chrome_options.add_argument('--headless')  # Ch·∫°y ·∫©n
        chrome_options.add_argument('--no-sandbox')
        chrome_options.add_argument('--disable-dev-shm-usage')
        chrome_options.add_argument('--disable-gpu')
        chrome_options.add_argument('--disable-logging')
        chrome_options.add_argument('--log-level=3')
        chrome_options.add_argument('--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36')
        
        print("üîç ƒêang crawl d·ªØ li·ªáu th·ª±c t·ª´ PNJ...", file=sys.stderr)
        driver = webdriver.Chrome(options=chrome_options)
        
        try:
            url = 'https://www.pnj.com.vn/site/gia-vang'
            driver.get(url)
            time.sleep(8)  # ƒê·ª£i JavaScript load ƒë·∫ßy ƒë·ªß
            
            # T√¨m table v·ªõi class c·ª• th·ªÉ ƒë√£ x√°c ƒë·ªãnh
            table = driver.find_element(By.CSS_SELECTOR, 'table.w-full.text-left.border-collapse')
            
            if table:
                rows = table.find_elements(By.TAG_NAME, 'tr')
                print(f"‚úÖ T√¨m th·∫•y table v·ªõi {len(rows)} h√†ng", file=sys.stderr)
                
                if len(rows) > 1:
                    markdown_lines = []
                    current_time = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                    
                    # Th√™m header
                    markdown_lines.append(f"# B·∫£ng Gi√° V√†ng PNJ")
                    markdown_lines.append(f"*C·∫≠p nh·∫≠t l√∫c: {current_time}*")
                    markdown_lines.append("")
                    markdown_lines.append("| Lo·∫°i V√†ng | Gi√° Mua (1000ƒë/ch·ªâ) | Gi√° B√°n (1000ƒë/ch·ªâ) |")
                    markdown_lines.append("|:---|:---:|:---:|")
                    
                    # Parse t·ª´ng h√†ng
                    for row in rows[1:]:  # B·ªè qua header
                        cells = row.find_elements(By.TAG_NAME, 'td')
                        if len(cells) >= 3:
                            # L·∫•y text t·ª´ 3 c·ªôt ƒë·∫ßu ti√™n
                            col1 = cells[0].text.strip()
                            col2 = cells[1].text.strip() 
                            col3 = cells[2].text.strip()
                            
                            if col1 and col2 and col3:
                                # L√†m s·∫°ch t√™n v√†ng (lo·∫°i b·ªè k√Ω t·ª± ƒë·∫∑c bi·ªát)
                                clean_name = col1.replace('|', '').strip()
                                markdown_lines.append(f"| {clean_name} | {col2} | {col3} |")
                    
                    # Th√™m footer
                    markdown_lines.append("")
                    markdown_lines.append("---")
                    markdown_lines.append("*Ngu·ªìn: https://www.pnj.com.vn/site/gia-vang*")
                    markdown_lines.append("*Crawled v·ªõi Selenium*")
                    
                    if len(markdown_lines) > 6:  # C√≥ d·ªØ li·ªáu th·ª±c
                        print(f"‚úÖ Crawl th√†nh c√¥ng {len(rows)-1} lo·∫°i v√†ng", file=sys.stderr)
                        return "\n".join(markdown_lines)
            
            print("‚ùå Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu trong table", file=sys.stderr)
            return ""
            
        finally:
            driver.quit()
            
    except ImportError:
        print("‚ùå Selenium ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t. C√†i ƒë·∫∑t b·∫±ng: pip install selenium", file=sys.stderr)
        return ""
    except Exception as e:
        print(f"‚ùå L·ªói khi crawl d·ªØ li·ªáu: {e}", file=sys.stderr)
        return ""

def get_pnj_gold_prices():
    """
    L·∫•y d·ªØ li·ªáu gi√° v√†ng t·ª´ website PNJ - CH·ªà crawl d·ªØ li·ªáu th·ª±c
    """
    # S·ª≠ d·ª•ng Selenium ƒë·ªÉ crawl d·ªØ li·ªáu th·ª±c
    selenium_result = get_pnj_gold_prices_selenium()
    if selenium_result:
        return selenium_result
    
    # N·∫øu Selenium kh√¥ng ho·∫°t ƒë·ªông, b√°o l·ªói thay v√¨ d√πng demo
    print("‚ùå Kh√¥ng th·ªÉ crawl d·ªØ li·ªáu th·ª±c t·ª´ PNJ", file=sys.stderr)
    print("üí° H√£y ƒë·∫£m b·∫£o:", file=sys.stderr)
    print("   - Selenium ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t: pip install selenium", file=sys.stderr)
    print("   - Chrome browser ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t", file=sys.stderr)
    print("   - K·∫øt n·ªëi internet ·ªïn ƒë·ªãnh", file=sys.stderr)
    
    return ""


if __name__ == "__main__":
    # T√™n file output ƒë∆∞·ª£c truy·ªÅn t·ª´ command line
    output_filename = sys.argv[1] if len(sys.argv) > 1 else "pnj_gold_prices.md"
    
    markdown_content = get_pnj_gold_prices()
    
    if markdown_content:
        with open(output_filename, 'w', encoding='utf-8') as f:
            f.write(markdown_content)
        print(f"‚úÖ ƒê√£ l∆∞u b·∫£ng gi√° v√†ng PNJ v√†o file: {output_filename}")
    else:
        print("‚ùå Kh√¥ng th·ªÉ crawl d·ªØ li·ªáu. Kh√¥ng t·∫°o file output.")
        sys.exit(1)
