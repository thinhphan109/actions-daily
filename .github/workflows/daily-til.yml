name: Daily TIL

on:
  schedule:
    # 17:05 UTC = 00:05 ICT (VN)
    - cron: '5 17 * * *'
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: daily-til
  cancel-in-progress: true

jobs:
  til:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create today's TIL (if missing)
        shell: bash
        run: |
          set -euo pipefail
          export TZ=Asia/Ho_Chi_Minh
          today=$(date +%F)
          year=$(date +%Y)
          month=$(date +%m)
          dir="til/$year/$month"
          file="$dir/$today.md"
          mkdir -p "$dir"
          if [ ! -f "$file" ]; then
            printf '# %s\n\n- H·ªçc ƒë∆∞·ª£c g√¨:\n- Code snippet:\n- Link PR/Issue trong ng√†y:\n' "$today" > "$file"
            git add "$file"
          else
            echo "Today's file already exists: $file"
          fi

      - name: Append modules (1: Calendar, 7: Mini-kata, 15: Weather Hanoi)
        shell: bash
        env:
          CITY: "H√† N·ªôi"
          LAT: "21.03"
          LON: "105.85"
        run: |
          set -euo pipefail
          export TZ=Asia/Ho_Chi_Minh

          # Determine today's file
          today=$(date +%F)
          year=$(date +%Y); month=$(date +%m)
          file="til/$year/$month/$today.md"
          [ -f "$file" ] || { echo "Missing TIL file, creating..."; printf '# %s\n\n- H·ªçc ƒë∆∞·ª£c g√¨:\n- Code snippet:\n- Link PR/Issue trong ng√†y:\n' "$today" > "$file"; }

          # Ensure jq exists (usually preinstalled)
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update -y && sudo apt-get install -y jq
          fi

          # ---------- Module 1: Calendar (offline) ----------
          if ! grep -q '^<!-- MOD-1-CALENDAR -->$' "$file"; then
            dow_num=$(date +%u) # 1..7
            case "$dow_num" in
              1) dow="Th·ª© Hai" ;;
              2) dow="Th·ª© Ba" ;;
              3) dow="Th·ª© T∆∞" ;;
              4) dow="Th·ª© NƒÉm" ;;
              5) dow="Th·ª© S√°u" ;;
              6) dow="Th·ª© B·∫£y" ;;
              7) dow="Ch·ªß Nh·∫≠t" ;;
            esac
            iso_week=$(date +%V)
            day_of_year=$(date +%j)
            {
              echo
              echo "<!-- MOD-1-CALENDAR -->"
              echo "## üìÖ H√¥m nay"
              echo "- Ng√†y: $today ($dow)"
              echo "- Tu·∫ßn ISO: $iso_week ‚Äî DayOfYear: $day_of_year"
            } >> "$file"
          fi

          # ---------- Module 7: Mini-kata code (offline deck) ----------
          if ! grep -q '^<!-- MOD-7-KATA -->$' "$file"; then
            # Deck tƒ©nh (Python/JS). M·ªói ng√†y l·∫•y 1 kata theo DayOfYear.
            read -r -d '' KATAS <<'DECK'
Implement a function `dedupe_keep_order(arr)` (Python) lo·∫°i ph·∫ßn t·ª≠ tr√πng, gi·ªØ nguy√™n th·ª© t·ª±.
Write `flattenN(arr, n)` (JS) ph·∫≥ng m·∫£ng l·ªìng t·ªëi ƒëa ƒë·ªô s√¢u n.
Vi·∫øt `is_palindrome(s)` (Python) b·ªè qua k√Ω t·ª± kh√¥ng ch·ªØ/s·ªë & kh√¥ng ph√¢n bi·ªát hoa th∆∞·ªùng.
Implement `throttle(fn, wait)` (JS) tr·∫£ v·ªÅ h√†m ch·ªâ ch·∫°y t·ªëi ƒëa 1 l·∫ßn m·ªói wait ms.
Vi·∫øt `fib_gen(n)` (Python) generator yield n s·ªë Fibonacci ƒë·∫ßu ti√™n (kh√¥ng d√πng ƒë·ªá quy).
Implement `formatVND(n)` (JS) tr·∫£ v·ªÅ chu·ªói ti·ªÅn t·ªá VND (d√πng Intl.NumberFormat n·∫øu c√≥).
Vi·∫øt `count_status(logs)` (Python) nh·∫≠n list d√≤ng log HTTP, tr·∫£ v·ªÅ dict {status: count}.
Implement `uniqueBy(arr, key)` (JS) lo·∫°i tr√πng theo kh√≥a (string ho·∫∑c accessor fn).
Vi·∫øt `two_sum(nums, target)` (Python) tr·∫£ v·ªÅ c·∫∑p ch·ªâ s·ªë i,j sao cho nums[i]+nums[j]=target.
Implement `groupBy(arr, key)` (JS) nh√≥m ph·∫ßn t·ª≠ theo thu·ªôc t√≠nh/kh√≥a.
DECK
            # Chuy·ªÉn deck th√†nh m·∫£ng d√≤ng
            IFS=$'\n' read -r -d '' -a KATA_ARR < <(printf '%s\n' "$KATAS" && printf '\0')
            doy=$(date +%j) ; doy=$((10#$doy)) # strip leading zero
            len=${#KATA_ARR[@]}
            idx=$(( (doy - 1) % len ))
            kata="${KATA_ARR[$idx]}"

            {
              echo
              echo "<!-- MOD-7-KATA -->"
              echo "## üß© Mini-kata (ng√†y $today)"
              echo "- $kata"
              echo
              echo "G·ª£i √Ω kh·ªüi ƒë·∫ßu:"
              echo '```python'
              echo '# TODO: gi·∫£i ·ªü ƒë√¢y'
              echo '```'
            } >> "$file"
          fi

          # ---------- Module 15: Weather (Open-Meteo, no key) ----------
          if ! grep -q '^<!-- MOD-15-WEATHER -->$' "$file"; then
            wjson=$(curl -fsSL "https://api.open-meteo.com/v1/forecast?latitude=${LAT}&longitude=${LON}&current_weather=true&timezone=Asia%2FHo_Chi_Minh" || true)
            if [ -n "$wjson" ]; then
              temp=$(echo "$wjson" | jq -r '.current_weather.temperature // empty')
              wind=$(echo "$wjson" | jq -r '.current_weather.windspeed // empty')
              code=$(echo "$wjson" | jq -r '.current_weather.weathercode // empty')
              # Map m√£ th·ªùi ti·∫øt sang m√¥ t·∫£ VN (g√≥i g·ªçn ph·ªï bi·∫øn)
              desc="Kh√¥ng r√µ"
              case "$code" in
                0) desc="Tr·ªùi quang m√¢y" ;;
                1|2|3) desc="√çt m√¢y / Nhi·ªÅu m√¢y" ;;
                45|48) desc="S∆∞∆°ng m√π" ;;
                51|53|55) desc="M∆∞a ph√πn" ;;
                61|63|65) desc="M∆∞a v·ª´a/ƒë·∫≠m" ;;
                71|73|75) desc="Tuy·∫øt r∆°i" ;;
                80|81|82) desc="M∆∞a r√†o" ;;
                95) desc="D√¥ng" ;;
                96|99) desc="D√¥ng k√®m m∆∞a ƒë√°" ;;
              esac
              {
                echo
                echo "<!-- MOD-15-WEATHER -->"
                echo "## üå§Ô∏è Th·ªùi ti·∫øt ${CITY} (hi·ªán t·∫°i)"
                if [ -n "$temp" ] && [ -n "$wind" ] && [ -n "$code" ]; then
                  echo "- Nhi·ªát ƒë·ªô: ${temp}¬∞C"
                  echo "- Gi√≥: ${wind} km/h"
                  echo "- M√£/Di·ªÖn gi·∫£i: ${code} ‚Äî ${desc}"
                else
                  echo "- (Kh√¥ng l·∫•y ƒë∆∞·ª£c d·ªØ li·ªáu)"
                fi
              } >> "$file"
            fi
          fi

          git add "$file"

      - name: Commit & push (if changes)
        shell: bash
        run: |
          set -euo pipefail
          if ! git diff --cached --quiet; then
            # Ghi danh t√≠nh l√† ch√≠nh b·∫°n ƒë·ªÉ ƒë∆∞·ª£c t√≠nh contribution
            git config user.name "${{ github.actor }}"
            git config user.email "${{ github.actor }}@users.noreply.github.com"
            git commit -m "chore(til): daily autosummary"
            git push
          else
            echo "No changes to commit"
          fi
