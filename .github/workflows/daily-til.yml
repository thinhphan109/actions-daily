name: Nh·∫≠t K√Ω T·ª± ƒê·ªông H√≥a H√†ng Ng√†y

on:
  schedule:
    # Ch·∫°y v√†o 00:05 gi·ªù Vi·ªát Nam m·ªói ng√†y (17:05 UTC)
    - cron: '5 17 * * *'
  workflow_dispatch: # Cho ph√©p ch·∫°y th·ªß c√¥ng

permissions:
  contents: write

concurrency:
  group: daily-note
  cancel-in-progress: true

jobs:
  create-daily-note:
    runs-on: ubuntu-latest
    env:
      CITY: "Ho Chi Minh"
      LAT: "10.82"
      LON: "106.63"
      TZ: Asia/Ho_Chi_Minh

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: C·∫≠p nh·∫≠t n·ªôi dung t·ª± ƒë·ªông
        shell: bash
        run: |
          set -euo pipefail
          
          today=$(date +%F)
          file="$today.md"

          if ! command -v jq >/dev/null 2>&1; then
            echo "jq not found. Installing..."
            sudo apt-get update -y && sudo apt-get install -y jq
          fi
          if ! command -v bc >/dev/null 2>&1; then
            echo "bc not found. Installing..."
            sudo apt-get update -y && sudo apt-get install -y bc
          fi

          # ========================================================================
          # === ƒê·ªäNH NGHƒ®A C√ÅC H√ÄM MODULE (PHI√äN B·∫¢N S·ª¨A L·ªñI & N√ÇNG C·∫§P) ===========
          # ========================================================================

          function append_header() {
            if [ ! -f "$file" ]; then
              printf '# üöÄ Nh·∫≠t K√Ω T·ª± ƒê·ªông H√≥a - %s\n' "$today" > "$file"
            fi
          }

          function append_calendar() {
            if ! grep -q '<!-- CALENDAR-MODULE -->' "$file"; then
              dow_num=$(date +%u); case "$dow_num" in 1) dow="Th·ª© Hai" ;; 2) dow="Th·ª© Ba" ;; 3) dow="Th·ª© T∆∞" ;; 4) dow="Th·ª© NƒÉm" ;; 5) dow="Th·ª© S√°u" ;; 6) dow="Th·ª© B·∫£y" ;; 7) dow="Ch·ªß Nh·∫≠t" ;; esac
              iso_week=$(date +%V); day_of_year=$(date +%j)
              { echo; echo "---"; echo "<!-- CALENDAR-MODULE -->"; echo "## üóìÔ∏è L·ªãch H√¥m Nay"; echo "- **Ng√†y**: $today ($dow)"; echo "- **Tu·∫ßn (ISO)**: $iso_week / **Ng√†y trong nƒÉm**: $day_of_year"; } >> "$file"
            fi
          }

          function append_weather_and_uv() {
            if ! grep -q '<!-- WEATHER-UV-MODULE -->' "$file"; then
              wjson=$(curl -fsSL "https://api.open-meteo.com/v1/forecast?latitude=${LAT}&longitude=${LON}&current_weather=true&daily=uv_index_max&timezone=Asia%2FHo_Chi_Minh" || true)
              if [ -n "$wjson" ] && echo "$wjson" | jq -e . >/dev/null 2>&1; then
                temp=$(echo "$wjson" | jq -r '.current_weather.temperature // empty'); wind=$(echo "$wjson" | jq -r '.current_weather.windspeed // empty'); code=$(echo "$wjson" | jq -r '.current_weather.weathercode // empty'); desc="Kh√¥ng r√µ"
                case "$code" in 0) desc="Tr·ªùi quang m√¢y" ;; 1|2|3) desc="√çt m√¢y / Nhi·ªÅu m√¢y" ;; 45|48) desc="S∆∞∆°ng m√π" ;; 51|53|55) desc="M∆∞a ph√πn" ;; 61|63|65) desc="M∆∞a v·ª´a/ƒë·∫≠m" ;; 80|81|82) desc="M∆∞a r√†o" ;; 95) desc="D√¥ng" ;; *) desc="Kh√¥ng x√°c ƒë·ªãnh" ;; esac
                
                uv_index=$(echo "$wjson" | jq -r '.daily.uv_index_max[0] // empty' | cut -d'.' -f1)
                uv_desc="Kh√¥ng x√°c ƒë·ªãnh"
                if [ -n "$uv_index" ]; then
                    if (( uv_index <= 2 )); then uv_desc="Th·∫•p - Kh√¥ng c·∫ßn b·∫£o v·ªá"
                    elif (( uv_index <= 5 )); then uv_desc="Trung b√¨nh - C·∫ßn che ch·∫Øn"
                    elif (( uv_index <= 7 )); then uv_desc="Cao - C·∫ßn b√¥i kem ch·ªëng n·∫Øng"
                    elif (( uv_index <= 10 )); then uv_desc="R·∫•t cao - H·∫°n ch·∫ø ra ngo√†i"
                    else uv_desc="C·ª±c k·ª≥ cao - Tr√°nh ra ngo√†i tr·ªùi"
                    fi
                fi
                { echo; echo "---"; echo "<!-- WEATHER-UV-MODULE -->"; echo "## üå§Ô∏è Th·ªùi ti·∫øt & Ch·ªâ s·ªë UV t·∫°i ${CITY}"; if [ -n "${temp}" ]; then echo "- **Nhi·ªát ƒë·ªô**: ${temp}¬∞C"; echo "- **Gi√≥**: ${wind} km/h"; echo "- **Hi·ªán t∆∞·ª£ng**: ${desc}"; else echo "- (Kh√¥ng l·∫•y ƒë∆∞·ª£c d·ªØ li·ªáu th·ªùi ti·∫øt)"; fi; if [ -n "$uv_index" ]; then echo "- **Ch·ªâ s·ªë UV**: $uv_index ($uv_desc)"; fi; } >> "$file"
              else
                echo "C·∫£nh b√°o: API Th·ªùi ti·∫øt/UV th·∫•t b·∫°i. B·ªè qua module n√†y."
              fi
            fi
          }

          function append_financial_data() {
            if ! grep -q '<!-- FINANCE-MODULE -->' "$file"; then
              ratejson=$(curl --connect-timeout 5 -fsSL "https://open.er-api.com/v6/latest/USD" || true)
              goldjson=$(curl --connect-timeout 5 -fsSL "https://vapi.vnappmob.com/api/v2/gold" || true)
              usd_vnd_rate="ƒêang c·∫≠p nh·∫≠t..."; gold_sell="ƒêang c·∫≠p nh·∫≠t..."
              if [ -n "$ratejson" ] && echo "$ratejson" | jq -e . >/dev/null 2>&1; then
                  rate_raw=$(echo "$ratejson" | jq -r '.rates.VND')
                  if [ -n "$rate_raw" ] && [ "$rate_raw" != "null" ]; then
                      usd_vnd_rate=$(printf "%.0f" "$rate_raw")
                  fi
              fi
              if [ -n "$goldjson" ] && echo "$goldjson" | jq -e '.results | length > 0' >/dev/null 2>&1; then
                  gold_sell_raw=$(echo "$goldjson" | jq -r '.results[] | select(.name | contains("SJC")) | .sell' | head -n 1)
                  if [ -n "$gold_sell_raw" ] && [ "$gold_sell_raw" != "null" ]; then
                      gold_sell_formatted=$(printf "%.3f" $(echo "$gold_sell_raw / 1000000" | bc -l))
                      gold_sell="${gold_sell_formatted} tri·ªáu"
                  fi
              else
                  echo "C·∫£nh b√°o: Kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu gi√° v√†ng ho·∫∑c API tr·∫£ v·ªÅ r·ªóng."
              fi
              { echo; echo "---"; echo "<!-- FINANCE-MODULE -->"; echo "## üí∞ D·ªØ li·ªáu t√†i ch√≠nh"; echo "- **T·ª∑ gi√° USD/VND**: 1 USD ‚âà $usd_vnd_rate VND"; echo "- **V√†ng SJC (b√°n ra)**: $gold_sell / l∆∞·ª£ng"; } >> "$file"
            fi
          }
          
          function append_crypto_prices() {
            if ! grep -q '<!-- CRYPTO-MODULE -->' "$file"; then
              COIN_IDS="bitcoin,ethereum,solana,dogecoin,tether"
              cryptojson=$(curl -fsSL "https://api.coingecko.com/api/v3/simple/price?ids=${COIN_IDS}&vs_currencies=usd" || true)
              if [ -n "$cryptojson" ] && echo "$cryptojson" | jq -e . >/dev/null 2>&1; then
                output=""
                # Bitcoin
                btc_price_raw=$(echo "$cryptojson" | jq -r '.bitcoin.usd');
                if [ -n "$btc_price_raw" ] && [ "$btc_price_raw" != "null" ]; then btc_price=$(printf "%.2f" "$btc_price_raw"); output+="- **Bitcoin (BTC)**: \$${btc_price} USD\n"; fi
                # Ethereum
                eth_price_raw=$(echo "$cryptojson" | jq -r '.ethereum.usd');
                if [ -n "$eth_price_raw" ] && [ "$eth_price_raw" != "null" ]; then eth_price=$(printf "%.2f" "$eth_price_raw"); output+="- **Ethereum (ETH)**: \$${eth_price} USD\n"; fi
                # Solana
                sol_price_raw=$(echo "$cryptojson" | jq -r '.solana.usd');
                if [ -n "$sol_price_raw" ] && [ "$sol_price_raw" != "null" ]; then sol_price=$(printf "%.2f" "$sol_price_raw"); output+="- **Solana (SOL)**: \$${sol_price} USD\n"; fi
                # Dogecoin
                doge_price_raw=$(echo "$cryptojson" | jq -r '.dogecoin.usd');
                if [ -n "$doge_price_raw" ] && [ "$doge_price_raw" != "null" ]; then doge_price=$(printf "%.4f" "$doge_price_raw"); output+="- **Dogecoin (DOGE)**: \$${doge_price} USD\n"; fi
                # Tether (USDT)
                usdt_price_raw=$(echo "$cryptojson" | jq -r '.tether.usd');
                if [ -n "$usdt_price_raw" ] && [ "$usdt_price_raw" != "null" ]; then usdt_price=$(printf "%.4f" "$usdt_price_raw"); output+="- **Tether (USDT)**: \$${usdt_price} USD\n"; fi
                output=$(echo -e "${output}" | sed '/^$/d')
                { echo; echo "---"; echo "<!-- CRYPTO-MODULE -->"; echo "## üìà Gi√° Ti·ªÅn M√£ H√≥a"; echo -e "$output"; } >> "$file"
              fi
            fi
          }
          
          function append_art_of_the_day() {
            if ! grep -q '<!-- ART-MODULE -->' "$file"; then
              echo "ƒêang l·∫•y T√°c ph·∫©m ngh·ªá thu·∫≠t trong ng√†y..."
              pagination_json=$(curl -fsSL "https://api.artic.edu/api/v1/artworks/search?query[term][is_public_domain]=true&fields=id&limit=1" || true)
              if [ -n "$pagination_json" ] && echo "$pagination_json" | jq -e . >/dev/null 2>&1; then
                total_pages=$(echo "$pagination_json" | jq -r '.pagination.total_pages // 1000')
                random_page=$((1 + RANDOM % total_pages))
                artjson=$(curl -fsSL "https://api.artic.edu/api/v1/artworks/search?query[term][is_public_domain]=true&fields=id,title,artist_display,image_id&limit=1&page=${random_page}" || true)
                if [ -n "$artjson" ] && [ "$(echo "$artjson" | jq -r '.data | length')" -gt 0 ]; then
                  artwork=$(echo "$artjson" | jq '.data[0]')
                  title=$(echo "$artwork" | jq -r '.title'); artist=$(echo "$artwork" | jq -r '.artist_display' | sed 's/<[^>]*>//g' | cut -d ',' -f 1 | head -n 1); image_id=$(echo "$artwork" | jq -r '.image_id')
                  if [ "$image_id" != "null" ]; then
                    image_url="https://www.artic.edu/iiif/2/${image_id}/full/843,/0/default.jpg"
                    { echo; echo "---"; echo "<!-- ART-MODULE -->"; echo "## üñºÔ∏è T√°c Ph·∫©m Ngh·ªá Thu·∫≠t Trong Ng√†y"; echo "- **T√™n**: $title"; echo "- **T√°c gi·∫£**: $artist"; echo "![${title}](${image_url})"; } >> "$file"
                  else
                    echo "C·∫£nh b√°o: T√°c ph·∫©m ngh·ªá thu·∫≠t t√¨m th·∫•y kh√¥ng c√≥ ·∫£nh. B·ªè qua."
                  fi
                else
                  echo "C·∫£nh b√°o: Kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu T√°c ph·∫©m ngh·ªá thu·∫≠t."
                fi
              else
                  echo "C·∫£nh b√°o: Kh√¥ng th·ªÉ l·∫•y th√¥ng tin ph√¢n trang c·ªßa API T√°c ph·∫©m ngh·ªá thu·∫≠t."
              fi
            fi
          }

          function append_footer() {
            if ! grep -q '<!-- FOOTER-MODULE -->' "$file"; then
              { echo; echo "---"; echo "<!-- FOOTER-MODULE -->"; echo "> *Ghi ch√∫ n√†y ƒë∆∞·ª£c t·∫°o t·ª± ƒë·ªông b·ªüi [GitHub Actions](https://github.com/features/actions).*" ; } >> "$file"
            fi
          }

          # ========================================================================
          # === G·ªåI C√ÅC H√ÄM ƒê·ªÇ TH√äM N·ªòI DUNG =======================================
          # ========================================================================
          echo "B·∫Øt ƒë·∫ßu c·∫≠p nh·∫≠t file: $file"
          append_header
          append_calendar
          append_weather_and_uv
          append_financial_data
          append_crypto_prices
          append_art_of_the_day
          append_footer
          echo "Ho√†n th√†nh c·∫≠p nh·∫≠t n·ªôi dung."
          
          git add "$file"

      - name: Commit v√† ƒë·∫©y code l√™n repo (n·∫øu c√≥ thay ƒë·ªïi)
        shell: bash
        run: |
          set -euo pipefail
          if ! git diff --cached --quiet; then
            git config user.name "${{ github.actor }}"
            git config user.email "${{ github.actor }}@users.noreply.github.com"
            git commit -m "üìù C·∫≠p nh·∫≠t nh·∫≠t k√Ω t·ª± ƒë·ªông ng√†y $(date +%F)"
            git push
          else
            echo "Kh√¥ng c√≥ g√¨ thay ƒë·ªïi ƒë·ªÉ commit."
          fi

