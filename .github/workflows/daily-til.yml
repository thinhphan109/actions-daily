name: Nh·∫≠t K√Ω T·ª± ƒê·ªông H√≥a H√†ng Ng√†y

on:
  schedule:
    # Ch·∫°y v√†o 00:05 gi·ªù Vi·ªát Nam m·ªói ng√†y (17:05 UTC)
    - cron: '5 17 * * *'
  workflow_dispatch: # Cho ph√©p ch·∫°y th·ªß c√¥ng

permissions:
  contents: write

concurrency:
  group: daily-note
  cancel-in-progress: true

jobs:
  create-daily-note:
    runs-on: ubuntu-latest
    env:
      CITY: "Ha Noi"
      LAT: "21.03"
      LON: "105.85"
      TZ: Asia/Ho_Chi_Minh

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: C·∫≠p nh·∫≠t n·ªôi dung t·ª± ƒë·ªông
        shell: bash
        run: |
          set -euo pipefail
          
          # --- ƒê·ªäNH NGHƒ®A T√äN FILE T·∫†I TH∆Ø M·ª§C G·ªêC ---
          today=$(date +%F)
          file="$today.md"

          # --- C√†i ƒë·∫∑t c√¥ng c·ª• c·∫ßn thi·∫øt (n·∫øu thi·∫øu) ---
          if ! command -v jq >/dev/null 2>&1; then
            echo "jq not found. Installing..."
            sudo apt-get update -y && sudo apt-get install -y jq
          fi

          # ========================================================================
          # === ƒê·ªäNH NGHƒ®A C√ÅC H√ÄM MODULE (PHI√äN B·∫¢N B·ªÄN B·ªà H∆†N) ===================
          # ========================================================================

          function append_header() {
            if [ ! -f "$file" ]; then
              printf '# üöÄ Nh·∫≠t K√Ω T·ª± ƒê·ªông H√≥a - %s\n' "$today" > "$file"
            fi
          }

          function append_calendar() {
            if ! grep -q '<!-- CALENDAR-MODULE -->' "$file"; then
              dow_num=$(date +%u); case "$dow_num" in 1) dow="Th·ª© Hai" ;; 2) dow="Th·ª© Ba" ;; 3) dow="Th·ª© T∆∞" ;; 4) dow="Th·ª© NƒÉm" ;; 5) dow="Th·ª© S√°u" ;; 6) dow="Th·ª© B·∫£y" ;; 7) dow="Ch·ªß Nh·∫≠t" ;; esac
              iso_week=$(date +%V); day_of_year=$(date +%j)
              { echo; echo "---"; echo "<!-- CALENDAR-MODULE -->"; echo "## üóìÔ∏è L·ªãch H√¥m Nay"; echo "- **Ng√†y**: $today ($dow)"; echo "- **Tu·∫ßn (ISO)**: $iso_week / **Ng√†y trong nƒÉm**: $day_of_year"; } >> "$file"
            fi
          }

          function append_lunar_calendar() {
            if ! grep -q '<!-- LUNAR-MODULE -->' "$file"; then
              day=$(date +%d); month=$(date +%m); year=$(date +%Y)
              lunarjson=$(curl -fsSL "https://api.bebi.dev/lich-am?day=${day}&month=${month}&year=${year}" || true)
              if [ -n "$lunarjson" ] && echo "$lunarjson" | jq -e . >/dev/null 2>&1; then
                amlich=$(echo "$lunarjson" | jq -r '"\(.day)/\(.month)/\(.year)"'); canchi=$(echo "$lunarjson" | jq -r '"Ng√†y \(.day_can_chi), th√°ng \(.month_can_chi), nƒÉm \(.year_can_chi)"')
                { echo; echo "<!-- LUNAR-MODULE -->"; echo "## üåï L·ªãch √Çm"; echo "- **√Çm l·ªãch**: $amlich"; echo "- **Can Chi**: $canchi"; } >> "$file"
              else
                echo "C·∫£nh b√°o: API L·ªãch √Çm (api.bebi.dev) th·∫•t b·∫°i. B·ªè qua module n√†y."
              fi
            fi
          }

          function append_weather() {
            if ! grep -q '<!-- WEATHER-MODULE -->' "$file"; then
              wjson=$(curl -fsSL "https://api.open-meteo.com/v1/forecast?latitude=${LAT}&longitude=${LON}&current_weather=true&timezone=Asia%2FHo_Chi_Minh" || true)
              if [ -n "$wjson" ] && echo "$wjson" | jq -e . >/dev/null 2>&1; then
                temp=$(echo "$wjson" | jq -r '.current_weather.temperature // empty'); wind=$(echo "$wjson" | jq -r '.current_weather.windspeed // empty'); code=$(echo "$wjson" | jq -r '.current_weather.weathercode // empty'); desc="Kh√¥ng r√µ"
                case "$code" in 0) desc="Tr·ªùi quang m√¢y" ;; 1|2|3) desc="√çt m√¢y / Nhi·ªÅu m√¢y" ;; 45|48) desc="S∆∞∆°ng m√π" ;; 51|53|55) desc="M∆∞a ph√πn" ;; 61|63|65) desc="M∆∞a v·ª´a/ƒë·∫≠m" ;; 80|81|82) desc="M∆∞a r√†o" ;; 95) desc="D√¥ng" ;; *) desc="Kh√¥ng x√°c ƒë·ªãnh" ;; esac
                { echo; echo "---"; echo "<!-- WEATHER-MODULE -->"; echo "## üå§Ô∏è Th·ªùi ti·∫øt t·∫°i ${CITY}"; if [ -n "${temp}" ]; then echo "- **Nhi·ªát ƒë·ªô**: ${temp}¬∞C"; echo "- **Gi√≥**: ${wind} km/h"; echo "- **Hi·ªán t∆∞·ª£ng**: ${desc}"; else echo "- (Kh√¥ng l·∫•y ƒë∆∞·ª£c d·ªØ li·ªáu th·ªùi ti·∫øt)"; fi; } >> "$file"
              else
                echo "C·∫£nh b√°o: API Th·ªùi ti·∫øt (api.open-meteo.com) th·∫•t b·∫°i. B·ªè qua module n√†y."
              fi
            fi
          }

          function append_financial_data() {
            if ! grep -q '<!-- FINANCE-MODULE -->' "$file"; then
              ratejson=$(curl --connect-timeout 5 -fsSL "https://open.er-api.com/v6/latest/USD" || true)
              goldjson=$(curl --connect-timeout 5 -fsSL "https://api-gold.vercel.app/api/sjc" || true)
              usd_vnd_rate="ƒêang c·∫≠p nh·∫≠t..."; gold_sell="ƒêang c·∫≠p nh·∫≠t..."
              if [ -n "$ratejson" ] && echo "$ratejson" | jq -e . >/dev/null 2>&1; then
                  usd_vnd_rate=$(echo "$ratejson" | jq '.rates.VND | tonumber | printf "%.0f"' 2>/dev/null || echo "L·ªói")
              fi
              if [ -n "$goldjson" ] && echo "$goldjson" | jq -e . >/dev/null 2>&1; then
                  latest_gold=$(echo "$goldjson" | jq '.[0]'); gold_sell=$(echo "$latest_gold" | jq -r '.sell | tonumber / 1000 | tostring + " tri·ªáu"')
              fi
              { echo; echo "---"; echo "<!-- FINANCE-MODULE -->"; echo "## üí∞ D·ªØ li·ªáu t√†i ch√≠nh"; echo "- **T·ª∑ gi√° USD/VND**: 1 USD ‚âà $usd_vnd_rate VND"; echo "- **V√†ng SJC (b√°n ra)**: $gold_sell / l∆∞·ª£ng"; } >> "$file"
            fi
          }
          
          function append_hacker_news() {
            if ! grep -q '<!-- HACKERNEWS-MODULE -->' "$file"; then
              hnjson=$(curl -fsSL "https://hn.algolia.com/api/v1/search?tags=front_page&hitsPerPage=3" || true)
              if [ -n "$hnjson" ] && echo "$hnjson" | jq -e . >/dev/null 2>&1; then 
                { echo; echo "---"; echo "<!-- HACKERNEWS-MODULE -->"; echo "## üì∞ Top tin t·ª©c Hacker News"; echo "$hnjson" | jq -r '.hits[] | "- [\(.title)](\(.url))"'; } >> "$file"
              fi
            fi
          }

          function append_history() {
            if ! grep -q '<!-- HISTORY-MODULE -->' "$file"; then
              month=$(date +%m); day=$(date +%d)
              histjson=$(curl -fsSL "https://en.wikipedia.org/api/rest_v1/feed/onthisday/events/${month}/${day}" || true)
              if [ -n "$histjson" ] && echo "$histjson" | jq -e . >/dev/null 2>&1; then 
                { echo; echo "---"; echo "<!-- HISTORY-MODULE -->"; echo "## üìú S·ª± ki·ªán l·ªãch s·ª≠ trong ng√†y"; echo "$histjson" | jq -r '.events[0:3][] | "- **\(.year)**: \(.text)"'; } >> "$file"
              fi
            fi
          }
          
          function append_quote() {
            if ! grep -q '<!-- QUOTE-MODULE -->' "$file"; then
              qjson=$(curl -fsSL "https://api.quotable.io/random" || true)
              if [ -n "$qjson" ] && echo "$qjson" | jq -e . >/dev/null 2>&1; then
                content=$(echo "$qjson" | jq -r '.content // empty'); author=$(echo "$qjson" | jq -r '.author // empty')
                { echo; echo "---"; echo "<!-- QUOTE-MODULE -->"; echo "## üí¨ Tr√≠ch d·∫´n trong ng√†y"; if [ -n "$content" ]; then echo "> $content"; echo ">"; echo "> ‚Äî ***$author***"; else echo "- (Kh√¥ng l·∫•y ƒë∆∞·ª£c d·ªØ li·ªáu)"; fi; } >> "$file"
              fi
            fi
          }

          function append_joke() {
            if ! grep -q '<!-- JOKE-MODULE -->' "$file"; then
              jokejson=$(curl -fsSL "https://readme-jokes.vercel.app/api" || true)
              if [ -n "$jokejson" ] && echo "$jokejson" | jq -e . >/dev/null 2>&1; then
                setup=$(echo "$jokejson" | jq -r '.setup'); punchline=$(echo "$jokejson" | jq -r '.punchline')
                { echo; echo "---"; echo "<!-- JOKE-MODULE -->"; echo "## üòÇ Chuy·ªán c∆∞·ªùi DEV"; echo "**H·ªèi:** *$setup*"; echo "**ƒê√°p:** *$punchline*"; } >> "$file"
              fi
            fi
          }

          function append_footer() {
            if ! grep -q '<!-- FOOTER-MODULE -->' "$file"; then
              { echo; echo "---"; echo "<!-- FOOTER-MODULE -->"; echo "> *Ghi ch√∫ n√†y ƒë∆∞·ª£c t·∫°o t·ª± ƒë·ªông b·ªüi [GitHub Actions](https://github.com/features/actions).*" ; } >> "$file"
            fi
          }

          # ========================================================================
          # === G·ªåI C√ÅC H√ÄM ƒê·ªÇ TH√äM N·ªòI DUNG =======================================
          # ========================================================================
          echo "B·∫Øt ƒë·∫ßu c·∫≠p nh·∫≠t file: $file"
          append_header
          append_calendar
          append_lunar_calendar
          append_weather
          append_financial_data
          append_hacker_news
          append_history
          append_quote
          append_joke
          append_footer
          echo "Ho√†n th√†nh c·∫≠p nh·∫≠t n·ªôi dung."

          # --- Th√™m file v√†o staging area ƒë·ªÉ chu·∫©n b·ªã commit ---
          git add "$file"

      - name: Commit v√† ƒë·∫©y code l√™n repo (n·∫øu c√≥ thay ƒë·ªïi)
        shell: bash
        run: |
          set -euo pipefail
          if ! git diff --cached --quiet; then
            git config user.name "${{ github.actor }}"
            git config user.email "${{ github.actor }}@users.noreply.github.com"
            git commit -m "üìù C·∫≠p nh·∫≠t nh·∫≠t k√Ω t·ª± ƒë·ªông ng√†y $(date +%F)"
            git push
          else
            echo "Kh√¥ng c√≥ g√¨ thay ƒë·ªïi ƒë·ªÉ commit."
          fi

